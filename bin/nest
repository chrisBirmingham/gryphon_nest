#!/usr/bin/env ruby
# frozen_string_literal: true

require 'gryphon_nest'
require 'optparse'
require 'sysexits'

DEFAULT_PORT = 8000

options = {
  port: DEFAULT_PORT
}

# @param msg [String]
# @param parser [OptionParser]
def usage_error(msg, parser)
  warn(msg, parser)
  Sysexits.exit(:usage)
end

# @param options [Hash]
# @return [Array]
begin
  parser = OptionParser.new do |opts|
    opts.banner = 'Usage: nest [build|serve] [options]'

    opts.on('-p', '--port [PORT]', Integer, 'Port to run dev server on')

    opts.on('-h', '--help', 'Show this message') do
      puts opts
      exit
    end

    opts.on('-v', '--version', 'Print version') do
      puts GryphonNest::VERSION
      exit
    end
  end

  parser.parse!(into: options)

  command = ARGV.fetch(0, 'build')

  usage_error("Unknown command #{command}", parser) unless %w[build serve].include?(command)

  GryphonNest.build_website
  GryphonNest.serve_website(options[:port]) if command == 'serve'
rescue OptionParser::ParseError => e
  usage_error(e.message, parser)
rescue GryphonNest::NotFoundError => e
  warn e.message
  Sysexits.exit(:input_missing)
end
